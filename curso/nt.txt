# se le pone "_"para encapsular el atributo . Se debe de evitar entrar directo al elemento
# property: decorador para llamar al metodo sin parentesis (GET)
# setter se ocupa para asignar un nuevo valor al elemento (SET)
# Si no se le pone set , solos era una variable de lectura

******************************************************************************
Para ejeutar solo el modulo del archivo
print(__name__)
te devuelve en donde se estan ejecutando los metodos de las clsases
if __name__ == '__main__':
sirve para solo ejecutar lo que corre ene le archivo

******************************************************************************
MRO - Method Resolution Order
Nos da el orden de como se definenen las clases
No se puede instanciar un aclase absttracta
*************************
CLASE ABSTRACTA
Una clase abstracta es aquella que se menciona en la clase padre y que se especifica en las clases hijas
esto tambien controla el manejo de los objetos de clases determinadas

#ABC = Abstract Base Class
from abc import ABC, abstractmethod
@abstractmethod
    def calcular_area(self):
        pass

*****************
Variables de clase
Se asosian con la clase
y se comparte con todos los objetos
y la ven con el mismo valor

*****************
Metodos estaticos - @staticmethod
se asocian a la clase
Los metodos etaticos no se pueden llamar desde la instancia
Trabajo dentro de la clase = Contexto estatico
Trabajo en instancia, ya que cargo la clase = contexto dinamico
self hace referencia a objetos.
******************
Metodo de clase @classmethod
con cls puede obtener la referencia del objeto
por que si ppuede acceder a la  información d ela clase
*********************
Constantes 
se escriben en mayusculas
separación "_"
No se puede bloquear el valor de una constante, solo no hay que hacerlo
********************
Diseño clase python
Se hace primero la que no necesita ninguna otra


